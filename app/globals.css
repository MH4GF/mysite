@import "tailwindcss";

@config '../tailwind.config.js';

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@layer base {
  :is(.dark .dark\:prose-invert) {
    --mysite-code-bg: var(--mysite-invert-code-bg);
  }

  :root {
    --white: 255 255 255;
    --zinc-900: 24 24 27;
    --zinc-800: 39 39 42;
    --zinc-700: 63 63 70;
    --zinc-500: 108 108 112;
    --zinc-400: 161 161 170;
    --zinc-300: 212 212 216;
    --zinc-200: 228 228 231;
    --zinc-100: 244 244 245;
    --zinc-50: 250 250 250;

    --background: var(--white);
    --foreground: var(--zinc-900);
    --foreground-sub: var(--zinc-500);

    --card: var(--white);
    --card-foreground: var(--zinc-900);

    --popover: var(--white);
    --popover-foreground: var(--zinc-900);

    --primary: var(--zinc-200);
    --primary-foreground: var(--zinc-200);

    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;

    --muted: var(--zinc-200);
    --muted-foreground: var(--zinc-500);

    --accent: var(--zinc-100);
    --accent-foreground: var(--zinc-900);

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: var(--zinc-200);

    --border: var(--zinc-300);
    --input: var(--zinc-300);
    --ring: var(--zinc-500);
  }

  .dark {
    --background: var(--zinc-900);
    --foreground: var(--zinc-200);
    --foreground-sub: var(--zinc-400);

    --card: var(--zinc-900);
    --card-foreground: var(--zinc-200);

    --popover: var(--zinc-900);
    --popover-foreground: var(--zinc-200);

    --primary: var(--zinc-200);
    --primary-foreground: var(--zinc-200);

    --secondary: var(--zinc-700);
    --secondary-foreground: var(--zinc-200);

    --muted: var(--zinc-700);
    --muted-foreground: var(--zinc-400);

    --accent: var(--zinc-800);
    --accent-foreground: var(--zinc-200);

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: var(--zinc-200);

    --border: var(--zinc-700);
    --input: var(--zinc-700);
    --ring: var(--zinc-400);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer base {
  @keyframes blur-enter {
    0% {
      filter: blur(4px);
      opacity: 0;
    }

    to {
      filter: blur(0);
      opacity: 1;
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    .blur-enter-content > * {
      --enter-stage: 0;
      --enter-step: 200ms;
      --enter-initial: 0ms;
      animation: blur-enter 0.8s both 1;
      animation-delay: calc(var(--enter-initial) + var(--enter-stage) * var(--enter-step));
    }

    .blur-enter-content.enter-step-80 > * {
      --enter-step: 80ms;
    }

    .blur-enter-content > *:nth-child(1) {
      --enter-stage: 1;
    }
    .blur-enter-content > *:nth-child(2) {
      --enter-stage: 2;
    }
    .blur-enter-content > *:nth-child(3) {
      --enter-stage: 3;
    }
    .blur-enter-content > *:nth-child(4) {
      --enter-stage: 4;
    }
    .blur-enter-content > *:nth-child(5) {
      --enter-stage: 5;
    }
    .blur-enter-content > *:nth-child(6) {
      --enter-stage: 6;
    }
    .blur-enter-content > *:nth-child(7) {
      --enter-stage: 7;
    }
    .blur-enter-content > *:nth-child(8) {
      --enter-stage: 8;
    }
    .blur-enter-content > *:nth-child(9) {
      --enter-stage: 9;
    }
    .blur-enter-content > *:nth-child(10) {
      --enter-stage: 10;
    }
    .blur-enter-content > *:nth-child(11) {
      --enter-stage: 11;
    }
    .blur-enter-content > *:nth-child(12) {
      --enter-stage: 12;
    }
    .blur-enter-content > *:nth-child(13) {
      --enter-stage: 13;
    }
    .blur-enter-content > *:nth-child(14) {
      --enter-stage: 14;
    }
    .blur-enter-content > *:nth-child(15) {
      --enter-stage: 15;
    }
    .blur-enter-content > *:nth-child(16) {
      --enter-stage: 16;
    }
    .blur-enter-content > *:nth-child(17) {
      --enter-stage: 17;
    }
    .blur-enter-content > *:nth-child(18) {
      --enter-stage: 18;
    }
    .blur-enter-content > *:nth-child(19) {
      --enter-stage: 19;
    }
    .blur-enter-content > *:nth-child(20) {
      --enter-stage: 20;
    }
  }
}
